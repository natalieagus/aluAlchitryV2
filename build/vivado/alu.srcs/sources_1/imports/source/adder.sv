/*
    This file was generated automatically by Alchitry Labs 2.0.18-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/
module adder #(
    parameter SIZE = 6'h20
  ) (
    input [(SIZE)-1:0] a,
    input [(SIZE)-1:0] b,
    input [(6)-1:0] alufn_signal,
    output reg [(SIZE)-1:0] out,
    output reg z,
    output reg v,
    output reg n
  );
  
  
  reg [(SIZE)-1:0] xb;
  
  localparam _MP_SIZE_697419237 = SIZE;
  reg [(_MP_SIZE_697419237)-1:0] M_rca_a;
  reg [(_MP_SIZE_697419237)-1:0] M_rca_b;
  reg M_rca_cin;
  wire M_rca_cout;
  wire [(_MP_SIZE_697419237)-1:0] M_rca_s;
  
  rca #(
    .SIZE(_MP_SIZE_697419237)
  ) rca (
    .a(M_rca_a),
    .b(M_rca_b),
    .cin(M_rca_cin),
    .cout(M_rca_cout),
    .s(M_rca_s)
  );
  
  
  always @* begin
    xb[(1'h0)+((SIZE - 1'h1)-(1'h0)+1) - 1 -:((SIZE - 1'h1)-(1'h0)+1)] = b ^ {SIZE{alufn_signal[(1'h0)]}};
    M_rca_a = a;
    M_rca_b = xb;
    M_rca_cin = alufn_signal[(1'h0)];
    out = M_rca_s;
    z = ~(|M_rca_s);
    v = (a[(SIZE - 1'h1)] & xb[(SIZE - 1'h1)] & !M_rca_s[(SIZE - 1'h1)]) | (!a[(SIZE - 1'h1)] & !xb[(SIZE - 1'h1)] & M_rca_s[(SIZE - 1'h1)]);
    n = M_rca_s[(SIZE - 1'h1)];
  end
  
endmodule