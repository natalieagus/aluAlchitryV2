/*
    This file was generated automatically by Alchitry Labs 2.0.19-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module x_bit_left_shifter #(
        parameter SHIFT = 4'h8,
        parameter SIZE = 6'h20
    ) (
        input wire [(SIZE)-1:0] a,
        input wire do_shift,
        input wire pad,
        output reg [(SIZE)-1:0] out
    );
    
    
    logic [(SIZE)-1:0] in_1shift_unit;
    logic [31:0] R_4964d1c4_i;
    logic [31:0]RR_4964d1c4_i;
    
    logic [(SIZE)-1:0] M_shift_unit_s0;
    logic [(SIZE)-1:0][1:0] M_shift_unit_in;
    logic [(SIZE)-1:0] M_shift_unit_out;
    
    genvar idx_0_458039700;
    
    generate
        for (idx_0_458039700 = 0; idx_0_458039700 < SIZE; idx_0_458039700 = idx_0_458039700 + 1) begin: forLoop_idx_0_458039700
            mux2 shift_unit (
                .s0(M_shift_unit_s0[idx_0_458039700]),
                .in(M_shift_unit_in[idx_0_458039700]),
                .out(M_shift_unit_out[idx_0_458039700])
            );
        end
    endgenerate
    
    
    always @* begin
        M_shift_unit_s0 = {SIZE{do_shift}};
        in_1shift_unit = {a[SIZE - 1'h1 - SHIFT:1'h0], {SHIFT{pad}}};
        for (RR_4964d1c4_i = 0; RR_4964d1c4_i < SIZE; RR_4964d1c4_i = RR_4964d1c4_i + 1) begin
      R_4964d1c4_i = (0) + RR_4964d1c4_i * (1);
            M_shift_unit_in[R_4964d1c4_i] = {in_1shift_unit[R_4964d1c4_i], a[R_4964d1c4_i]};
        end
        out = M_shift_unit_out;
    end
    
endmodule