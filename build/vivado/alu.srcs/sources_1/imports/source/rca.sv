/*
    This file was generated automatically by Alchitry Labs 2.0.18-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/
module rca #(
    parameter SIZE = 6'h20
  ) (
    input [(SIZE)-1:0] a,
    input [(SIZE)-1:0] b,
    input cin,
    output reg cout,
    output reg [(SIZE)-1:0] s
  );
  
  
  reg [(32):0] R_7a94cef9_i, RR_7a94cef9_i;
  
  wire [(SIZE)-1:0] M_fa_s;
  wire [(SIZE)-1:0] M_fa_cout;
  reg [(SIZE)-1:0] M_fa_a;
  reg [(SIZE)-1:0] M_fa_b;
  reg [(SIZE)-1:0] M_fa_cin;
  
  genvar idx_0_994943455;
  
  generate
    for (idx_0_994943455 = 0; idx_0_994943455 < SIZE; idx_0_994943455 = idx_0_994943455 + 1) begin: forLoop_idx_0_994943455
      fa fa_idx_0_994943455 (
        .s(M_fa_s[(idx_0_994943455)]),
        .cout(M_fa_cout[(idx_0_994943455)]),
        .a(M_fa_a[(idx_0_994943455)]),
        .b(M_fa_b[(idx_0_994943455)]),
        .cin(M_fa_cin[(idx_0_994943455)])
      );
    end
  endgenerate
  
  
  always @* begin
    M_fa_a = a;
    M_fa_b = b;
    M_fa_cin = 1'h0;
    for (RR_7a94cef9_i = 0; RR_7a94cef9_i < SIZE; RR_7a94cef9_i = RR_7a94cef9_i + 1) begin
      R_7a94cef9_i = (0) + RR_7a94cef9_i * (1);
      if (R_7a94cef9_i == 1'h0) begin
        M_fa_cin[(1'h0)] = cin;
      end else begin
        M_fa_cin[(R_7a94cef9_i)] = M_fa_cout[(R_7a94cef9_i - 1'h1)];
      end
    end
    cout = M_fa_cout[(SIZE - 1'h1)];
    s = M_fa_s;
  end
  
endmodule