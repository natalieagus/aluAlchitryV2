/*
    This file was generated automatically by Alchitry Labs 2.0.11-PREVIEW.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/
/*
  Parameters:
      SHIFT = {100} : 4
      SIZE = {100000} : 32
*/
module MI_xBitLeftShifter_b895f260 (
    input [31:0] P_a,
    input P_doShift,
    input P_pad,
    output reg [31:0] P_out
  );
  localparam P_SHIFT = 3'h4;
  localparam P_SIZE = 6'h20;
  
  
  reg [31:0] in1ShiftUnit;
  reg [5:0] R_243f9291_i;
  
  reg [31:0] M_shiftUnit_s0;
  reg [63:0] M_shiftUnit_in;
  wire [31:0] M_shiftUnit_out;
  MI_mux2 shiftUnit_0 (
    .P_s0(M_shiftUnit_s0[0]),
    .P_in(M_shiftUnit_in[1-:2]),
    .P_out(M_shiftUnit_out[0])
  );
  MI_mux2 shiftUnit_1 (
    .P_s0(M_shiftUnit_s0[1]),
    .P_in(M_shiftUnit_in[3-:2]),
    .P_out(M_shiftUnit_out[1])
  );
  MI_mux2 shiftUnit_2 (
    .P_s0(M_shiftUnit_s0[2]),
    .P_in(M_shiftUnit_in[5-:2]),
    .P_out(M_shiftUnit_out[2])
  );
  MI_mux2 shiftUnit_3 (
    .P_s0(M_shiftUnit_s0[3]),
    .P_in(M_shiftUnit_in[7-:2]),
    .P_out(M_shiftUnit_out[3])
  );
  MI_mux2 shiftUnit_4 (
    .P_s0(M_shiftUnit_s0[4]),
    .P_in(M_shiftUnit_in[9-:2]),
    .P_out(M_shiftUnit_out[4])
  );
  MI_mux2 shiftUnit_5 (
    .P_s0(M_shiftUnit_s0[5]),
    .P_in(M_shiftUnit_in[11-:2]),
    .P_out(M_shiftUnit_out[5])
  );
  MI_mux2 shiftUnit_6 (
    .P_s0(M_shiftUnit_s0[6]),
    .P_in(M_shiftUnit_in[13-:2]),
    .P_out(M_shiftUnit_out[6])
  );
  MI_mux2 shiftUnit_7 (
    .P_s0(M_shiftUnit_s0[7]),
    .P_in(M_shiftUnit_in[15-:2]),
    .P_out(M_shiftUnit_out[7])
  );
  MI_mux2 shiftUnit_8 (
    .P_s0(M_shiftUnit_s0[8]),
    .P_in(M_shiftUnit_in[17-:2]),
    .P_out(M_shiftUnit_out[8])
  );
  MI_mux2 shiftUnit_9 (
    .P_s0(M_shiftUnit_s0[9]),
    .P_in(M_shiftUnit_in[19-:2]),
    .P_out(M_shiftUnit_out[9])
  );
  MI_mux2 shiftUnit_10 (
    .P_s0(M_shiftUnit_s0[10]),
    .P_in(M_shiftUnit_in[21-:2]),
    .P_out(M_shiftUnit_out[10])
  );
  MI_mux2 shiftUnit_11 (
    .P_s0(M_shiftUnit_s0[11]),
    .P_in(M_shiftUnit_in[23-:2]),
    .P_out(M_shiftUnit_out[11])
  );
  MI_mux2 shiftUnit_12 (
    .P_s0(M_shiftUnit_s0[12]),
    .P_in(M_shiftUnit_in[25-:2]),
    .P_out(M_shiftUnit_out[12])
  );
  MI_mux2 shiftUnit_13 (
    .P_s0(M_shiftUnit_s0[13]),
    .P_in(M_shiftUnit_in[27-:2]),
    .P_out(M_shiftUnit_out[13])
  );
  MI_mux2 shiftUnit_14 (
    .P_s0(M_shiftUnit_s0[14]),
    .P_in(M_shiftUnit_in[29-:2]),
    .P_out(M_shiftUnit_out[14])
  );
  MI_mux2 shiftUnit_15 (
    .P_s0(M_shiftUnit_s0[15]),
    .P_in(M_shiftUnit_in[31-:2]),
    .P_out(M_shiftUnit_out[15])
  );
  MI_mux2 shiftUnit_16 (
    .P_s0(M_shiftUnit_s0[16]),
    .P_in(M_shiftUnit_in[33-:2]),
    .P_out(M_shiftUnit_out[16])
  );
  MI_mux2 shiftUnit_17 (
    .P_s0(M_shiftUnit_s0[17]),
    .P_in(M_shiftUnit_in[35-:2]),
    .P_out(M_shiftUnit_out[17])
  );
  MI_mux2 shiftUnit_18 (
    .P_s0(M_shiftUnit_s0[18]),
    .P_in(M_shiftUnit_in[37-:2]),
    .P_out(M_shiftUnit_out[18])
  );
  MI_mux2 shiftUnit_19 (
    .P_s0(M_shiftUnit_s0[19]),
    .P_in(M_shiftUnit_in[39-:2]),
    .P_out(M_shiftUnit_out[19])
  );
  MI_mux2 shiftUnit_20 (
    .P_s0(M_shiftUnit_s0[20]),
    .P_in(M_shiftUnit_in[41-:2]),
    .P_out(M_shiftUnit_out[20])
  );
  MI_mux2 shiftUnit_21 (
    .P_s0(M_shiftUnit_s0[21]),
    .P_in(M_shiftUnit_in[43-:2]),
    .P_out(M_shiftUnit_out[21])
  );
  MI_mux2 shiftUnit_22 (
    .P_s0(M_shiftUnit_s0[22]),
    .P_in(M_shiftUnit_in[45-:2]),
    .P_out(M_shiftUnit_out[22])
  );
  MI_mux2 shiftUnit_23 (
    .P_s0(M_shiftUnit_s0[23]),
    .P_in(M_shiftUnit_in[47-:2]),
    .P_out(M_shiftUnit_out[23])
  );
  MI_mux2 shiftUnit_24 (
    .P_s0(M_shiftUnit_s0[24]),
    .P_in(M_shiftUnit_in[49-:2]),
    .P_out(M_shiftUnit_out[24])
  );
  MI_mux2 shiftUnit_25 (
    .P_s0(M_shiftUnit_s0[25]),
    .P_in(M_shiftUnit_in[51-:2]),
    .P_out(M_shiftUnit_out[25])
  );
  MI_mux2 shiftUnit_26 (
    .P_s0(M_shiftUnit_s0[26]),
    .P_in(M_shiftUnit_in[53-:2]),
    .P_out(M_shiftUnit_out[26])
  );
  MI_mux2 shiftUnit_27 (
    .P_s0(M_shiftUnit_s0[27]),
    .P_in(M_shiftUnit_in[55-:2]),
    .P_out(M_shiftUnit_out[27])
  );
  MI_mux2 shiftUnit_28 (
    .P_s0(M_shiftUnit_s0[28]),
    .P_in(M_shiftUnit_in[57-:2]),
    .P_out(M_shiftUnit_out[28])
  );
  MI_mux2 shiftUnit_29 (
    .P_s0(M_shiftUnit_s0[29]),
    .P_in(M_shiftUnit_in[59-:2]),
    .P_out(M_shiftUnit_out[29])
  );
  MI_mux2 shiftUnit_30 (
    .P_s0(M_shiftUnit_s0[30]),
    .P_in(M_shiftUnit_in[61-:2]),
    .P_out(M_shiftUnit_out[30])
  );
  MI_mux2 shiftUnit_31 (
    .P_s0(M_shiftUnit_s0[31]),
    .P_in(M_shiftUnit_in[63-:2]),
    .P_out(M_shiftUnit_out[31])
  );
  
  always @* begin
    M_shiftUnit_s0 = {6'h20{P_doShift}};
    in1ShiftUnit = {P_a[(1'h0)+27-:28], {3'h4{P_pad}}};
    for (R_243f9291_i = 0; R_243f9291_i < (0) + (6'h20) * (1); R_243f9291_i = R_243f9291_i + (1)) begin
      M_shiftUnit_in[(R_243f9291_i)*2+1-:2] = {in1ShiftUnit[(R_243f9291_i)], P_a[(R_243f9291_i)]};
    end
    P_out = M_shiftUnit_out;
  end
  
endmodule